{"ast":null,"code":"class Card {\n  constructor(cardId, print, edition, series, cardName) {\n    this.cardId = cardId;\n    this.print = print;\n    this.edition = edition;\n    this.series = series;\n    this.cardName = cardName;\n    this.imageUrl = this.generateImageUrl();\n  }\n  generateImageUrl() {\n    const imageName = encodeURIComponent(this.cardName.replace(/\\s+/g, '-').toLowerCase());\n    return `https://d2l56h9h5tj8ue.cloudfront.net/images/cards/${imageName}-${this.edition}.jpg`;\n  }\n}\nexport const parseCardInput = input => {\n  const lines = input.split('\\n').slice(0, 40);\n  return lines.map(line => {\n    const cardData = {};\n    const cardIdMatch = line.match(/^.*?([^\\s]+) ·/);\n    cardData.cardId = cardIdMatch ? cardIdMatch[1].trim() : null;\n    const printMatch = line.match(/#(\\d+)/);\n    cardData.print = printMatch ? printMatch[1] : null;\n    const editionMatch = line.match(/◈(\\d+)/);\n    cardData.edition = editionMatch ? editionMatch[1] : null;\n    const seriesMatch = line.match(/◈\\d+ · ([^·]+) ·/);\n    cardData.series = seriesMatch ? seriesMatch[1].trim() : null;\n    const cardNameMatch = line.match(/· ([^·]+)$/);\n    cardData.cardName = cardNameMatch ? cardNameMatch[1].trim() : null;\n    if (cardData.cardId !== null) {\n      return new Card(cardData.cardId, cardData.print, cardData.edition, cardData.series, cardData.cardName);\n    } else {\n      return null;\n    }\n  }).filter(card => card !== null);\n};","map":{"version":3,"names":["Card","constructor","cardId","print","edition","series","cardName","imageUrl","generateImageUrl","imageName","encodeURIComponent","replace","toLowerCase","parseCardInput","input","lines","split","slice","map","line","cardData","cardIdMatch","match","trim","printMatch","editionMatch","seriesMatch","cardNameMatch","filter","card"],"sources":["C:/Users/kylas/OneDrive/Documents/KVAC/KVACreact/karuta-visual-album-creator/src/utils/parser.js"],"sourcesContent":["class Card {\r\n    constructor(cardId, print, edition, series, cardName) {\r\n        this.cardId = cardId;\r\n        this.print = print;\r\n        this.edition = edition;\r\n        this.series = series;\r\n        this.cardName = cardName;\r\n        this.imageUrl = this.generateImageUrl();\r\n    }\r\n\r\n    generateImageUrl() {\r\n        const imageName = encodeURIComponent(this.cardName.replace(/\\s+/g, '-').toLowerCase());\r\n        return `https://d2l56h9h5tj8ue.cloudfront.net/images/cards/${imageName}-${this.edition}.jpg`;\r\n    }\r\n}\r\n\r\nexport const parseCardInput = (input) => {\r\n    const lines = input.split('\\n').slice(0, 40);\r\n    return lines.map(line => {\r\n        const cardData = {};\r\n\r\n        const cardIdMatch = line.match(/^.*?([^\\s]+) ·/);\r\n        cardData.cardId = cardIdMatch ? cardIdMatch[1].trim() : null;\r\n\r\n        const printMatch = line.match(/#(\\d+)/);\r\n        cardData.print = printMatch ? printMatch[1] : null;\r\n\r\n        const editionMatch = line.match(/◈(\\d+)/);\r\n        cardData.edition = editionMatch ? editionMatch[1] : null;\r\n\r\n        const seriesMatch = line.match(/◈\\d+ · ([^·]+) ·/);\r\n        cardData.series = seriesMatch ? seriesMatch[1].trim() : null;\r\n\r\n        const cardNameMatch = line.match(/· ([^·]+)$/);\r\n        cardData.cardName = cardNameMatch ? cardNameMatch[1].trim() : null;\r\n\r\n        if (cardData.cardId !== null) {\r\n            return new Card(cardData.cardId, cardData.print, cardData.edition, cardData.series, cardData.cardName);\r\n        } else {\r\n            return null;\r\n        }\r\n    }).filter(card => card !== null);\r\n};\r\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IAClD,IAAI,CAACJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3C;EAEAA,gBAAgBA,CAAA,EAAG;IACf,MAAMC,SAAS,GAAGC,kBAAkB,CAAC,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IACtF,OAAQ,sDAAqDH,SAAU,IAAG,IAAI,CAACL,OAAQ,MAAK;EAChG;AACJ;AAEA,OAAO,MAAMS,cAAc,GAAIC,KAAK,IAAK;EACrC,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAC5C,OAAOF,KAAK,CAACG,GAAG,CAACC,IAAI,IAAI;IACrB,MAAMC,QAAQ,GAAG,CAAC,CAAC;IAEnB,MAAMC,WAAW,GAAGF,IAAI,CAACG,KAAK,CAAC,gBAAgB,CAAC;IAChDF,QAAQ,CAAClB,MAAM,GAAGmB,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,GAAG,IAAI;IAE5D,MAAMC,UAAU,GAAGL,IAAI,CAACG,KAAK,CAAC,QAAQ,CAAC;IACvCF,QAAQ,CAACjB,KAAK,GAAGqB,UAAU,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI;IAElD,MAAMC,YAAY,GAAGN,IAAI,CAACG,KAAK,CAAC,QAAQ,CAAC;IACzCF,QAAQ,CAAChB,OAAO,GAAGqB,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI;IAExD,MAAMC,WAAW,GAAGP,IAAI,CAACG,KAAK,CAAC,kBAAkB,CAAC;IAClDF,QAAQ,CAACf,MAAM,GAAGqB,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,GAAG,IAAI;IAE5D,MAAMI,aAAa,GAAGR,IAAI,CAACG,KAAK,CAAC,YAAY,CAAC;IAC9CF,QAAQ,CAACd,QAAQ,GAAGqB,aAAa,GAAGA,aAAa,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC,GAAG,IAAI;IAElE,IAAIH,QAAQ,CAAClB,MAAM,KAAK,IAAI,EAAE;MAC1B,OAAO,IAAIF,IAAI,CAACoB,QAAQ,CAAClB,MAAM,EAAEkB,QAAQ,CAACjB,KAAK,EAAEiB,QAAQ,CAAChB,OAAO,EAAEgB,QAAQ,CAACf,MAAM,EAAEe,QAAQ,CAACd,QAAQ,CAAC;IAC1G,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC,CAAC,CAACsB,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC;AACpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}